name: Build and Release
on:
  push:
    tags: [ "v*" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: GitHub Actions environment variables
        run: printenv | sort

      - name: Clone
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build
        id: build
        run: |
          make
          echo "Checking for build artifact..."
          ls -lah release/*                 

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag Docker image
        id: docker_build
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository }}"
          VERSION=${GITHUB_REF#refs/tags/}
          IMAGE_TAG_VERSION=${IMAGE_NAME}:${VERSION}
          IMAGE_TAG_LATEST=${IMAGE_NAME}:latest

          docker build -t ${IMAGE_TAG_VERSION} .
          docker tag ${IMAGE_TAG_VERSION} ${IMAGE_TAG_LATEST}

          echo "IMAGE_TAG_VERSION=${IMAGE_TAG_VERSION}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG_LATEST=${IMAGE_TAG_LATEST}" >> $GITHUB_OUTPUT

      - name: Push Docker Images
        run: |
          docker push ${{ steps.docker_build.outputs.IMAGE_TAG_VERSION }}
          docker push ${{ steps.docker_build.outputs.IMAGE_TAG_LATEST }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            Release based on tag ${{ github.ref_name }}.
            Docker Image: `${{ steps.docker_build.outputs.IMAGE_TAG_VERSION }}`
          files: |
            release/*